package com.mariosyian.contacts;
/**
 * Application to display GUI as a mobile device used to store contact
 * information of people and keep it saved in a text file within the same
 * directory as the JAVA Source File.
*/

import java.awt.*;
import java.awt.event.*;
import java.io.*;
import javax.swing.*;

public class Device extends JFrame implements ActionListener {
	/**
	 * Automatically generated by eclipse
	 */
	private static final long serialVersionUID = 1L;
	
	private static int ID = 0;
	 
	/*----------Widgets----------*/
	  //Labels
	private JLabel name = new JLabel("Name:");
	private JLabel phone = new JLabel("Phone:");
	private JLabel email = new JLabel("EMail:");
	private JLabel age = new JLabel("Age:");
	private JLabel city = new JLabel("City:");
	private JLabel bday = new JLabel("Birthday:");
	private JLabel occupation = new JLabel("Occupation:");
	  
	  //Buttons
	private JButton save = new JButton("Save");
	private JButton edit = new JButton("Edit");
	private JButton call = new JButton("Call");
	private JButton del = new JButton("Delete");
	  //Layouts
	GridLayout mainGrid = new GridLayout(0,2);
	
	  //Text Fields
	private static JTextField nameTxt = new JTextField("NAME_FIELD");
	private static JTextField phoneTxt = new JTextField("PHONE_FIELD");
	private static JTextField emailTxt = new JTextField("EMAIL_FIELD");
	private static JTextField ageTxt = new JTextField("AGE_FIELD");
	private static JTextField cityTxt = new JTextField("CITY_FIELD");
	private static JTextField bdayTxt = new JTextField("BDAY_FIELD");
	private static JTextField occTxt = new JTextField("JOB_FIELD");
	  
	 //Miscellaneous
	private final static String FILENAME = "src/com/mariosyian/contacts/data.txt";
	private File saveFile = new File(FILENAME);
	private PrintWriter fileWrite = null;
	private static BufferedReader read = null;
	
	public Device() {
	  setTitle("Device");
	    
	  Container device = getContentPane();
	  device.setLayout(mainGrid);
	     
	  device.add(name);
	  device.add(nameTxt);
	  device.add(phone);
	  device.add(phoneTxt);
	  device.add(email);
	  device.add(emailTxt);
	  device.add(age);
	  device.add(ageTxt);
	  device.add(city);
	  device.add(cityTxt);
	  device.add(bday);
	  device.add(bdayTxt);
	  device.add(occupation);
	  device.add(occTxt);
	    
	  device.add(save);
	  device.add(edit);
	  device.add(call);
	  device.add(del);
	    
	  save.addActionListener(this);
	  call.addActionListener(this);
	  edit.addActionListener(this);
	  del.addActionListener(this);
	    
	    //x, y, width, height
	  setBounds(50, 50, 250, 250);
	  setDefaultCloseOperation(EXIT_ON_CLOSE);
	}
	  
	public void actionPerformed(ActionEvent event) {
		if (event.getSource() == call) {
			call.setText("PRESSED Call");
		} else if (event.getSource() == edit) {
			edit.setText("PRESSED Edit");
		} else if (event.getSource() == del) {
			del.setText("PRESSED Delete");
		} else if (event.getSource() == save) {
			try {
				write2File();
			} catch (Exception e) {
				System.err.println(e);
			}
			save.setText("PRESSED Save");
			resetTxtFields(nameTxt.getText());
    }
  }
  
  private void write2File() {
    try {
      fileWrite = new PrintWriter(new FileWriter(saveFile, true));
      
      fileWrite.println(ID + ";" + nameTxt.getText() + ";" + phoneTxt.getText()  + ";" +
                        emailTxt.getText()  + ";" + ageTxt.getText()  + ";" +
                        cityTxt.getText()  + ";" + bdayTxt.getText()  + ";" +
                        occTxt.getText());
      ID ++;
      
      fileWrite.close();
    } catch (FileNotFoundException e) {
      System.out.println("No such file found!");
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
  
  private void resetTxtFields(String newName) {
      nameTxt.setText("");
      phoneTxt.setText("");
      emailTxt.setText("");
      ageTxt.setText("");
      cityTxt.setText("");
      bdayTxt.setText("");
      occTxt.setText("");
      
      contacts.newBtn(newName);
  }
  
		//Accessor Methods//
  public static String getContactName() {
  	return nameTxt.getText(); 
  }
      
  public static String getPhone() {
  	return phoneTxt.getText(); 
  }
      
  public static String getEmail() {
  	return emailTxt.getText(); 
  }
      
	public static String getAge() {
		return ageTxt.getText(); 
	}
      
	public static String getCity() {
		return cityTxt.getText(); 
	}
      
	public static String getBday() {
		return bdayTxt.getText(); 
	}
        
	public static String getOccupation() {
		return occTxt.getText(); 
	}
  
		//Mutator Methods//
	public static void setContactName(String data) {
		nameTxt.setText(data);
	}
      
	public static void setPhone(String data) {
		phoneTxt.setText(data); 
	}
      
	public static void setEmail(String data) {
		emailTxt.setText(data);
	}
      
	public static void setAge(String data) {
		ageTxt.setText(data);
	}
      
	public static void setCity(String data) {
		cityTxt.setText(data); 
	}
      
	public static void setBday(String data) {
		bdayTxt.setText(data); 
	}
      
	public static void setOccupation(String data) {
		occTxt.setText(data);
	}

  //Used to retrieve the unique ID for the next contact
  private static void getID() {
    try {
      String line = "";
      read = new BufferedReader(new FileReader(FILENAME));
      
      while ((line = read.readLine()) != null) {
        String[] dataSplit = line.split(";");
        ID = Integer.parseInt(dataSplit[0]);
      }
      ID ++;
    } catch (FileNotFoundException e) {
      System.out.println("File does not exist.");
    } catch (IOException e) {
      System.out.println(e.getMessage());
    } catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
  
  
  	  // Declared class-scope to be manipulated - dispose, recreate etc
	private static Contacts contacts; 
	  
	public static void main(String[] args) {
		getID();
		contacts = new Contacts();
		Device device = new Device();
		device.setVisible(true);
		contacts.setVisible(true);
	}
}
